#!/bin/bash

# ------------------------------------------------------------------------------
# Globals
# ------------------------------------------------------------------------------

function ConfigureGlobals() {
  . /etc/os-release                                         # Set linux distribution (debian | arch) into ID global
  export LINUX="$ID"                                        # Linux distribution

  if [[ $LINUX != "arch" ]]; then
    echo "This installation does not work for the" $LINUX "distribution!"
    exit 1                                                  # Exit on wrong option
  fi
}

function UpdatePackages() { 
  pacman-key --init
  pacman-key --populate
  pacman -Syu --noconfirm
}

function Install() {
  packages=$1                                               # First argument: packages to be installed
  pacman -S $packages --noconfirm
}

function EnableService() {
  service=$1
  systemctl enable $service
}

function CopySetupScript() {
  mkdir -p /mnt/home/$user/.install
  cp -r ~/linux /mnt/home/$user/.install
}

# ------------------------------------------------------------------------------
# Partition
# ------------------------------------------------------------------------------

function CreatePartitions() {
  if [[ $boot == "bios" ]]; then
    echo -e "o\nn\n\n\n\n\na\nw\n" | fdisk /dev/sda
  fi 

  if [[ $boot == "uefi" ]]; then
    echo -e "g\nn\n\n\n+1G\nt\nuefi\nn\n\n\n\nw\n" | fdisk /dev/sda
  fi
}

function FormatPartitions() {
  if [[ $boot == "bios" ]]; then
    mkfs.ext4 /dev/sda1
  fi

  if [[ $boot == "uefi" ]]; then
    mkfs.fat -F 32 /dev/sda1
    mkfs.ext4 /dev/sda2
  fi
}

function MountPartitions() {
  mkdir -p /mnt
  if [[ $boot == "bios" ]]; then
    mount /dev/sda1 /mnt
  fi

  if [[ $boot == "uefi" ]]; then
    mount /dev/sda2 /mnt
    mount --mkdir /dev/sda1 /mnt/boot/efi
  fi
}

function UmountPartitions() {
  umount -R /mnt
}

function ShutdownSystem() {
  shutdown -h now
}
